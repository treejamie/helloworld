searchData={"items":[{"type":"module","title":"Hello.ExtrovertServer","doc":"The **Extrovert server** thrives on interaction and energetically\nsays \"Hello, World!\" in random languages.\n\nIt continuously sends greetings to the **Introvert server** and\nhandles termination gracefully when shut down (likely for talking too much).","ref":"Hello.ExtrovertServer.html"},{"type":"module","title":"State - Hello.ExtrovertServer","doc":"- `:greetings` - A list of greeting phrases loaded at startup. Populated from CSV","ref":"Hello.ExtrovertServer.html#module-state"},{"type":"module","title":"Behavior - Hello.ExtrovertServer","doc":"- Starts talking immediately after initialization and every 1200ms after that.\n- Sends a `:hello` message to the `:introvert` process with each greeting.\n- Handles termination by outputting a farewell message.\n\nDesigned to **demonstrate fault tolerance** and **process communication**.","ref":"Hello.ExtrovertServer.html#module-behavior"},{"type":"function","title":"Hello.ExtrovertServer.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Hello.ExtrovertServer.html#child_spec/1"},{"type":"function","title":"Hello.ExtrovertServer.handle_info/2","doc":"Handles the `:talk` message.\n\n- Picks a random greeting from the state.\n- Sends the greeting to the console.\n- Sends a `:hello` message to the `:introvert` process.\n- Schedules the next `:talk` message.\n\nUpdates the internal state by removing the used greeting.","ref":"Hello.ExtrovertServer.html#handle_info/2"},{"type":"function","title":"Hello.ExtrovertServer.start_link/1","doc":"Starts the **Extrovert server**.\n\nThis function links the process and registers it under the `:extrovert` name.","ref":"Hello.ExtrovertServer.html#start_link/1"},{"type":"function","title":"Hello.ExtrovertServer.terminate/2","doc":"Handles termination of the **Extrovert server**.\n(_probably because it talked too much_)","ref":"Hello.ExtrovertServer.html#terminate/2"},{"type":"module","title":"Hello.Greetings","doc":"Provides a simple Elixir interface to load **\"Hello, World!\" greetings**\nfrom a CSV file.\n\nThe CSV is expected to have multiple rows with the greeting in the **second column**.","ref":"Hello.Greetings.html"},{"type":"function","title":"Hello.Greetings.load_greetings/0","doc":"Loads the list of greetings from `hello_world_30_languages.csv`.","ref":"Hello.Greetings.html#load_greetings/0"},{"type":"function","title":"Returns - Hello.Greetings.load_greetings/0","doc":"A list of strings, each representing a translated \"Hello, World!\" message.","ref":"Hello.Greetings.html#load_greetings/0-returns"},{"type":"function","title":"Example - Hello.Greetings.load_greetings/0","doc":"iex> Hello.Greetings.load_greetings()\n    [\"Hello, world!\", \"Hello, world!\", \"¡Hola, mundo!\", \"Bonjour, le monde!\",\n    \"Hallo, Welt!\", \"Ciao, mondo!\", \"Olá, mundo!\", \"Привет, мир!\",\n    \"你好，世界！\", \"こんにちは、世界！\",\n    \"안녕하세요, 세계!\", \"مرحبا بالعالم!\",\n    \"नमस्ते दुनिया!\", \"ওহে বিশ্ব!\",\n    \"Merhaba, dünya!\", \"Witaj, świecie!\", \"Привіт, світе!\",\n    \"سلام دنیا!\", \"Hej, världen!\", \"Hei, verden!\", \"Hej, verden!\",\n    \"Hei, maailma!\", \"Ahoj, světe!\", \"Γειά σου, κόσμε!\",\n    \"שלום, עולם!\", \"Halo, dunia!\", \"Halo, dunia!\",\n    \"Xin chào, thế giới!\", \"สวัสดีชาวโลก!\",\n    \"Hallo, wereld!\", \"Salut, lume!\"]","ref":"Hello.Greetings.html#load_greetings/0-example"},{"type":"function","title":"Notes - Hello.Greetings.load_greetings/0","doc":"- Assumes the CSV file is located **one level above** the current directory.\n- Uses `CSV.decode!/1` to parse rows.\n- Extracts the **second column** from each row (ignores language code and extras).","ref":"Hello.Greetings.html#load_greetings/0-notes"},{"type":"module","title":"Hello.IntrovertServer","doc":"The **Introvert server** enjoys peace and quiet but has limited patience\nfor interruptions.\n\nWhen greeted (`:hello`), the introvert politely requests silence up to a point,\ngradually escalating in frustration. If pushed too far (state reaches 8),\nit **flips tables**, **terminates the Extrovert server**, and enjoys a period\nof blissful silence. After a cooldown, the introvert feels regret and\n**restarts the Extrovert server**.","ref":"Hello.IntrovertServer.html"},{"type":"module","title":"State - Hello.IntrovertServer","doc":"- Integer count representing the **number of times** the introvert has\n  been disturbed.","ref":"Hello.IntrovertServer.html#module-state"},{"type":"module","title":"Behavior - Hello.IntrovertServer","doc":"- Politely asks for quiet until its **temper threshold** is reached.\n- Shuts down the **Extrovert server** at peak frustration.\n- Waits before **restarting Extrovert** after calming down.","ref":"Hello.IntrovertServer.html#module-behavior"},{"type":"function","title":"Hello.IntrovertServer.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Hello.IntrovertServer.html#child_spec/1"},{"type":"function","title":"Hello.IntrovertServer.handle_info/2","doc":"Handles `:hello` messages for all states **below 8**.\n\n- Escalates responses based on **frustration level**.\n- Increases the internal state count.","ref":"Hello.IntrovertServer.html#handle_info/2"},{"type":"function","title":"Hello.IntrovertServer.init/1","doc":"Initializes the **Introvert server**.\n\n- **State**: Starts at `0`, representing the introvert's tolerance level.","ref":"Hello.IntrovertServer.html#init/1"},{"type":"function","title":"Parameters - Hello.IntrovertServer.init/1","doc":"- `state` (integer): Initial state, defaults to `0`.","ref":"Hello.IntrovertServer.html#init/1-parameters"},{"type":"function","title":"Hello.IntrovertServer.start_link/1","doc":"Starts the **Introvert server**.\n\nRegisters the process under the `:introvert` name and initializes state to `0`.","ref":"Hello.IntrovertServer.html#start_link/1"},{"type":"module","title":"Hello.ServerSupervisor","doc":"The **ServerSupervisor** manages two interacting GenServers:\nan **Introvert server** and an **Extrovert server**.\n\nThis setup demonstrates **process supervision** and **inter-process communication**:\n\n- The **Introvert server** prefers peace and quiet, escalating when disturbed.\n- The **Extrovert server** energetically sends greetings.\n- When the introvert reaches its limit, it **terminates the extrovert process**.\n\nThis showcases how **supervisors** handle **fault tolerance** and **restarts** in Elixir.","ref":"Hello.ServerSupervisor.html"},{"type":"module","title":"Supervision Strategy - Hello.ServerSupervisor","doc":"- Uses `:one_for_one`: if a child process crashes, **only that process** is restarted.\n- The **extrovert** process is given a custom child spec with `id: :extrovert` for\n  **easy identification and control**.","ref":"Hello.ServerSupervisor.html#module-supervision-strategy"},{"type":"function","title":"Hello.ServerSupervisor.child_spec/1","doc":"Returns a specification to start this module under a supervisor.\n\nSee `Supervisor`.","ref":"Hello.ServerSupervisor.html#child_spec/1"},{"type":"function","title":"Hello.ServerSupervisor.init/1","doc":"","ref":"Hello.ServerSupervisor.html#init/1"},{"type":"function","title":"Hello.ServerSupervisor.start_link/0","doc":"Starts the **ServerSupervisor**, which in turn starts the\n**Introvert** and **Extrovert** servers.","ref":"Hello.ServerSupervisor.html#start_link/0"},{"type":"module","title":"Hello.World","doc":"The main **Hello World application entry point**.\n\n- Starts the **ServerSupervisor**, which in turn supervises:\n  - The **Introvert server** (handles quiet tolerance).\n  - The **Extrovert server** (enthusiastically greets the world).\n\nDemonstrates **application startup**, **supervision trees**, and **process interaction** in Elixir.","ref":"Hello.World.html"},{"type":"function","title":"Hello.World.start/2","doc":"Starts the **Hello World application**.\n\n- Initializes the **supervision tree** by starting the `Hello.ServerSupervisor`.","ref":"Hello.World.html#start/2"},{"type":"extras","title":"README","doc":"","ref":"readme.html"},{"type":"extras","title":"Elixir Hello, World! - README","doc":"![The Idea](assets/idea.jpeg)\n\n\nTruth be told, there's not really a lot you can do with this example.","ref":"readme.html#elixir-hello-world"}],"proglang":"elixir","content_type":"text/markdown","producer":{"name":"ex_doc","version":"0.37.3"}}